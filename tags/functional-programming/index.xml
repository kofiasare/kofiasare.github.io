<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on Kofi A. Asare</title>
    <link>/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on Kofi A. Asare</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 20 Nov 2018 13:00:07 +0000</lastBuildDate>
    
	<atom:link href="/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Named Function Outside Of A Module In Elixir</title>
      <link>/blog/named-function-outside-of-a-module-in-elixir/</link>
      <pubDate>Tue, 20 Nov 2018 13:00:07 +0000</pubDate>
      
      <guid>/blog/named-function-outside-of-a-module-in-elixir/</guid>
      <description>Sometimes, In a dynamic typed language(interactive), you quickly want to group instructions to acheive a behaviour and
repeated use i.e function.
E.g: A function to find the sum of a list of numbers can be implemented so.
Ruby #irb def sum(list_of_numbers) list_of_numbers.reduce(:+) end sum [1,2,3,4,5] #=&amp;gt; 15 Javascript //node repl function sum(listOfNumbers){ return listOfNumbers.reduce((acc = 0, n) =&amp;gt; acc + n) } sum([1,2,3,4,5]) //=&amp;gt; 15  Elixir Such flexibility isn&amp;rsquo;t quite the case in elixir.</description>
    </item>
    
    <item>
      <title>Elixir List</title>
      <link>/blog/elixir-list/</link>
      <pubDate>Fri, 19 Oct 2018 13:36:07 +0000</pubDate>
      
      <guid>/blog/elixir-list/</guid>
      <description>List
A list in elixir is denoted by square brackets [ ], its underlying data structure is a linked list ( single ) as opposed
to an array. Each element (node) of the list holds reference to the next, this implies that an element of the list is likely
to be stored in a random location in memory.
A list is segemented into two (2) parts head and tail and can contain different datatypes but usually contains</description>
    </item>
    
  </channel>
</rss>